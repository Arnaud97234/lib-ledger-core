// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http_client.djinni

#pragma once

#include "../../api/HttpResponse.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class HttpResponse final {
public:
    using CppType = ::ledger::core::api::HttpResponse;
    using JniType = jobject;

    using Boxed = HttpResponse;

    ~HttpResponse();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    HttpResponse();
    friend ::djinni::JniClass<HttpResponse>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/HttpResponse") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(ILjava/lang/String;Ljava/util/HashMap;[B)V") };
    const jfieldID field_statusCode { ::djinni::jniGetFieldID(clazz.get(), "statusCode", "I") };
    const jfieldID field_statusText { ::djinni::jniGetFieldID(clazz.get(), "statusText", "Ljava/lang/String;") };
    const jfieldID field_headers { ::djinni::jniGetFieldID(clazz.get(), "headers", "Ljava/util/HashMap;") };
    const jfieldID field_body { ::djinni::jniGetFieldID(clazz.get(), "body", "[B") };
};

}  // namespace djinni_generated
