// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet_pool.djinni

#include "WalletPool.hpp"  // my header
#include "BitcoinLikeExtendedPublicKeyProvider.hpp"
#include "BitcoinLikeNetworkParameters.hpp"
#include "BitcoinLikeNetworkParametersCallback.hpp"
#include "BitcoinLikeWalletCallback.hpp"
#include "DynamicObject.hpp"
#include "Logger.hpp"
#include "Marshal.hpp"
#include "Preferences.hpp"

namespace djinni_generated {

WalletPool::WalletPool() : ::djinni::JniInterface<::ledger::core::api::WalletPool, WalletPool>("co/ledger/core/WalletPool$CppProxy") {}

WalletPool::~WalletPool() = default;


CJNIEXPORT void JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::WalletPool>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getOrCreateBitcoinLikeWallet(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_publicKeyProvider, jobject j_networkParams, jobject j_configuration, jobject j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        ref->getOrCreateBitcoinLikeWallet(::djinni_generated::BitcoinLikeExtendedPublicKeyProvider::toCpp(jniEnv, j_publicKeyProvider),
                                          ::djinni_generated::BitcoinLikeNetworkParameters::toCpp(jniEnv, j_networkParams),
                                          ::djinni_generated::DynamicObject::toCpp(jniEnv, j_configuration),
                                          ::djinni_generated::BitcoinLikeWalletCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getBitcoinLikeWallet(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_identifier, jobject j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        ref->getBitcoinLikeWallet(::djinni::String::toCpp(jniEnv, j_identifier),
                                  ::djinni_generated::BitcoinLikeWalletCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getSupportedBitcoinLikeNetworkParameters(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        ref->getSupportedBitcoinLikeNetworkParameters(::djinni_generated::BitcoinLikeNetworkParametersCallback::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1addBitcoinLikeNetworkParameters(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_params)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        ref->addBitcoinLikeNetworkParameters(::djinni_generated::BitcoinLikeNetworkParameters::toCpp(jniEnv, j_params));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1removeBitcoinLikenetworkParameters(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_params)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        ref->removeBitcoinLikenetworkParameters(::djinni_generated::BitcoinLikeNetworkParameters::toCpp(jniEnv, j_params));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getLogger(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        auto r = ref->getLogger();
        return ::djinni::release(::djinni_generated::Logger::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getPreferences(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        auto r = ref->getPreferences();
        return ::djinni::release(::djinni_generated::Preferences::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getWalletPreferences(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_walletIdentifier)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        auto r = ref->getWalletPreferences(::djinni::String::toCpp(jniEnv, j_walletIdentifier));
        return ::djinni::release(::djinni_generated::Preferences::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getAccountPreferences(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_walletIdentifier, jint j_accountNumber)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        auto r = ref->getAccountPreferences(::djinni::String::toCpp(jniEnv, j_walletIdentifier),
                                            ::djinni::I32::toCpp(jniEnv, j_accountNumber));
        return ::djinni::release(::djinni_generated::Preferences::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_WalletPool_00024CppProxy_native_1getOperationPreferences(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_uid)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::WalletPool>(nativeRef);
        auto r = ref->getOperationPreferences(::djinni::String::toCpp(jniEnv, j_uid));
        return ::djinni::release(::djinni_generated::Preferences::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
