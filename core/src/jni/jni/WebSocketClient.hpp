// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from websocket_client.djinni

#pragma once

#include "../../api/WebSocketClient.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class WebSocketClient final : ::djinni::JniInterface<::ledger::core::api::WebSocketClient, WebSocketClient> {
public:
    using CppType = std::shared_ptr<::ledger::core::api::WebSocketClient>;
    using CppOptType = std::shared_ptr<::ledger::core::api::WebSocketClient>;
    using JniType = jobject;

    using Boxed = WebSocketClient;

    ~WebSocketClient();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<WebSocketClient>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<WebSocketClient>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    WebSocketClient();
    friend ::djinni::JniClass<WebSocketClient>;
    friend ::djinni::JniInterface<::ledger::core::api::WebSocketClient, WebSocketClient>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ledger::core::api::WebSocketClient
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();


    private:
        friend ::djinni::JniInterface<::ledger::core::api::WebSocketClient, ::djinni_generated::WebSocketClient>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/WebSocketClient") };
};

}  // namespace djinni_generated
