// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet_pool.djinni

#include "BitcoinLikeNetworkParametersCallback.hpp"  // my header
#include "BitcoinLikeNetworkParameters.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

BitcoinLikeNetworkParametersCallback::BitcoinLikeNetworkParametersCallback() : ::djinni::JniInterface<::ledger::core::api::BitcoinLikeNetworkParametersCallback, BitcoinLikeNetworkParametersCallback>() {}

BitcoinLikeNetworkParametersCallback::~BitcoinLikeNetworkParametersCallback() = default;

BitcoinLikeNetworkParametersCallback::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

BitcoinLikeNetworkParametersCallback::JavaProxy::~JavaProxy() = default;

void BitcoinLikeNetworkParametersCallback::JavaProxy::onCallback(const std::vector<::ledger::core::api::BitcoinLikeNetworkParameters> & c_params) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::BitcoinLikeNetworkParametersCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onCallback,
                           ::djinni::get(::djinni::List<::djinni_generated::BitcoinLikeNetworkParameters>::fromCpp(jniEnv, c_params)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
