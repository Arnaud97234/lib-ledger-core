// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_public_key_provider.djinni

#include "BitcoinLikeBase58PublicKeyCallback.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

BitcoinLikeBase58PublicKeyCallback::BitcoinLikeBase58PublicKeyCallback() : ::djinni::JniInterface<::ledger::core::api::BitcoinLikeBase58PublicKeyCallback, BitcoinLikeBase58PublicKeyCallback>("co/ledger/core/BitcoinLikeBase58PublicKeyCallback$CppProxy") {}

BitcoinLikeBase58PublicKeyCallback::~BitcoinLikeBase58PublicKeyCallback() = default;


CJNIEXPORT void JNICALL Java_co_ledger_core_BitcoinLikeBase58PublicKeyCallback_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::BitcoinLikeBase58PublicKeyCallback>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_co_ledger_core_BitcoinLikeBase58PublicKeyCallback_00024CppProxy_native_1onBase58ExtendedPublicKey(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_xpub)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::BitcoinLikeBase58PublicKeyCallback>(nativeRef);
        ref->onBase58ExtendedPublicKey(::djinni::String::toCpp(jniEnv, j_xpub));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
