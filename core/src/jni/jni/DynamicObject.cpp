// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from dynamic.djinni

#include "DynamicObject.hpp"  // my header
#include "DynamicArray.hpp"
#include "DynamicType.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

DynamicObject::DynamicObject() : ::djinni::JniInterface<::ledger::core::api::DynamicObject, DynamicObject>("co/ledger/core/DynamicObject$CppProxy") {}

DynamicObject::~DynamicObject() = default;


CJNIEXPORT void JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ledger::core::api::DynamicObject>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jboolean JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1isReadOnly(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::isReadOnly\n");
        auto r = ref->isReadOnly();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putString(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jstring j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putString\n");
        auto r = ref->putString(::djinni::String::toCpp(jniEnv, j_key),
                                ::djinni::String::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putInt(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jint j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putInt\n");
        auto r = ref->putInt(::djinni::String::toCpp(jniEnv, j_key),
                             ::djinni::I32::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putLong(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jlong j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putLong\n");
        auto r = ref->putLong(::djinni::String::toCpp(jniEnv, j_key),
                              ::djinni::I64::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putDouble(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jdouble j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putDouble\n");
        auto r = ref->putDouble(::djinni::String::toCpp(jniEnv, j_key),
                                ::djinni::F64::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putData(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jbyteArray j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putData\n");
        auto r = ref->putData(::djinni::String::toCpp(jniEnv, j_key),
                              ::djinni::Binary::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putBoolean(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jboolean j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putBoolean\n");
        auto r = ref->putBoolean(::djinni::String::toCpp(jniEnv, j_key),
                                 ::djinni::Bool::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getString(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getString\n");
        auto r = ref->getString(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getInt(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getInt\n");
        auto r = ref->getInt(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni::I32>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getLong(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getLong\n");
        auto r = ref->getLong(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni::I64>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getDouble(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getDouble\n");
        auto r = ref->getDouble(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni::F64>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jbyteArray JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getData(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getData\n");
        auto r = ref->getData(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni::Binary>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getBoolean(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getBoolean\n");
        auto r = ref->getBoolean(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni::Bool>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putObject(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jobject j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putObject\n");
        auto r = ref->putObject(::djinni::String::toCpp(jniEnv, j_key),
                                ::djinni_generated::DynamicObject::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1putArray(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key, jobject j_value)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::putArray\n");
        auto r = ref->putArray(::djinni::String::toCpp(jniEnv, j_key),
                               ::djinni_generated::DynamicArray::toCpp(jniEnv, j_value));
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getObject(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getObject\n");
        auto r = ref->getObject(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni_generated::DynamicObject>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getArray(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getArray\n");
        auto r = ref->getArray(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni_generated::DynamicArray>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1contains(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::contains\n");
        auto r = ref->contains(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1remove(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::remove\n");
        auto r = ref->remove(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getKeys(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getKeys\n");
        auto r = ref->getKeys();
        return ::djinni::release(::djinni::List<::djinni::String>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1getType(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_key)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::getType\n");
        auto r = ref->getType(::djinni::String::toCpp(jniEnv, j_key));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni_generated::DynamicType>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1dump(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::dump\n");
        auto r = ref->dump();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jbyteArray JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1serialize(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::serialize\n");
        auto r = ref->serialize();
        return ::djinni::release(::djinni::Binary::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jlong JNICALL Java_co_ledger_core_DynamicObject_00024CppProxy_native_1size(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ledger::core::api::DynamicObject>(nativeRef);
        fmt::print("::ledger::core::api::DynamicObject::size\n");
        auto r = ref->size();
        return ::djinni::release(::djinni::I64::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_newInstance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        fmt::print("::ledger::core::api::DynamicObject::newInstance\n");
        auto r = ::ledger::core::api::DynamicObject::newInstance();
        return ::djinni::release(::djinni_generated::DynamicObject::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_co_ledger_core_DynamicObject_load(JNIEnv* jniEnv, jobject /*this*/, jbyteArray j_serialized)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        fmt::print("::ledger::core::api::DynamicObject::load\n");
        auto r = ::ledger::core::api::DynamicObject::load(::djinni::Binary::toCpp(jniEnv, j_serialized));
        return ::djinni::release(::djinni::Optional<std::experimental::optional, ::djinni_generated::DynamicObject>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
