// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.djinni

#include "TestCallback.hpp"  // my header
#include "Error.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

TestCallback::TestCallback() : ::djinni::JniInterface<::ledger::core::api::TestCallback, TestCallback>() {}

TestCallback::~TestCallback() = default;

TestCallback::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

TestCallback::JavaProxy::~JavaProxy() = default;

void TestCallback::JavaProxy::onCallback(const std::experimental::optional<std::string> & c_value, const std::experimental::optional<::ledger::core::api::Error> & c_error) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::TestCallback>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onCallback,
                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(jniEnv, c_value)),
                           ::djinni::get(::djinni::Optional<std::experimental::optional, ::djinni_generated::Error>::fromCpp(jniEnv, c_error)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
