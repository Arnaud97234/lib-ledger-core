// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#ifndef DJINNI_GENERATED_BITCOINLIKENEXTACCOUNTINFO_HPP_JNI_
#define DJINNI_GENERATED_BITCOINLIKENEXTACCOUNTINFO_HPP_JNI_

#include "../../api/BitcoinLikeNextAccountInfo.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class BitcoinLikeNextAccountInfo final {
public:
    using CppType = ::ledger::core::api::BitcoinLikeNextAccountInfo;
    using JniType = jobject;

    using Boxed = BitcoinLikeNextAccountInfo;

    ~BitcoinLikeNextAccountInfo();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    BitcoinLikeNextAccountInfo();
    friend ::djinni::JniClass<BitcoinLikeNextAccountInfo>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/BitcoinLikeNextAccountInfo") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V") };
    const jfieldID field_xpubPath { ::djinni::jniGetFieldID(clazz.get(), "xpubPath", "Ljava/lang/String;") };
    const jfieldID field_index { ::djinni::jniGetFieldID(clazz.get(), "index", "I") };
    const jfieldID field_parentNodePath { ::djinni::jniGetFieldID(clazz.get(), "parentNodePath", "Ljava/lang/String;") };
    const jfieldID field_accountNodePath { ::djinni::jniGetFieldID(clazz.get(), "accountNodePath", "Ljava/lang/String;") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_BITCOINLIKENEXTACCOUNTINFO_HPP_JNI_
