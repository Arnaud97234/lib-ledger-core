// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#include "BitcoinLikeCurrencyDescription.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

BitcoinLikeCurrencyDescription::BitcoinLikeCurrencyDescription() = default;

BitcoinLikeCurrencyDescription::~BitcoinLikeCurrencyDescription() = default;

auto BitcoinLikeCurrencyDescription::fromCpp(JNIEnv* jniEnv, const CppType& c) -> ::djinni::LocalRef<JniType> {
    const auto& data = ::djinni::JniClass<BitcoinLikeCurrencyDescription>::get();
    auto r = ::djinni::LocalRef<JniType>{jniEnv->NewObject(data.clazz.get(), data.jconstructor,
                                                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c.BIP44CoinType)),
                                                           ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c.P2PKHAddressVersion)),
                                                           ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c.P2SHAddressVersion)),
                                                           ::djinni::get(::djinni::Binary::fromCpp(jniEnv, c.XPUBAddressVersion)),
                                                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c.shortName)))};
    ::djinni::jniExceptionCheck(jniEnv);
    return r;
}

auto BitcoinLikeCurrencyDescription::toCpp(JNIEnv* jniEnv, JniType j) -> CppType {
    ::djinni::JniLocalScope jscope(jniEnv, 6);
    assert(j != nullptr);
    const auto& data = ::djinni::JniClass<BitcoinLikeCurrencyDescription>::get();
    return {::djinni::I32::toCpp(jniEnv, jniEnv->GetIntField(j, data.field_BIP44CoinType)),
            ::djinni::Binary::toCpp(jniEnv, (jbyteArray)jniEnv->GetObjectField(j, data.field_P2PKHAddressVersion)),
            ::djinni::Binary::toCpp(jniEnv, (jbyteArray)jniEnv->GetObjectField(j, data.field_P2SHAddressVersion)),
            ::djinni::Binary::toCpp(jniEnv, (jbyteArray)jniEnv->GetObjectField(j, data.field_XPUBAddressVersion)),
            ::djinni::String::toCpp(jniEnv, (jstring)jniEnv->GetObjectField(j, data.field_shortName))};
}

}  // namespace djinni_generated
