// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_public_key_provider.djinni

#pragma once

#include "../../api/BitcoinPublicKey.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class BitcoinPublicKey final {
public:
    using CppType = ::ledger::core::api::BitcoinPublicKey;
    using JniType = jobject;

    using Boxed = BitcoinPublicKey;

    ~BitcoinPublicKey();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    BitcoinPublicKey();
    friend ::djinni::JniClass<BitcoinPublicKey>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/BitcoinPublicKey") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "([B[B)V") };
    const jfieldID field_publicKey { ::djinni::jniGetFieldID(clazz.get(), "publicKey", "[B") };
    const jfieldID field_chainCode { ::djinni::jniGetFieldID(clazz.get(), "chainCode", "[B") };
};

}  // namespace djinni_generated
