// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from path_resolver.djinni

#pragma once

#include "../../api/PathResolver.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class PathResolver final : ::djinni::JniInterface<::ledger::core::api::PathResolver, PathResolver> {
public:
    using CppType = std::shared_ptr<::ledger::core::api::PathResolver>;
    using CppOptType = std::shared_ptr<::ledger::core::api::PathResolver>;
    using JniType = jobject;

    using Boxed = PathResolver;

    ~PathResolver();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<PathResolver>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<PathResolver>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    PathResolver();
    friend ::djinni::JniClass<PathResolver>;
    friend ::djinni::JniInterface<::ledger::core::api::PathResolver, PathResolver>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ledger::core::api::PathResolver
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();


    private:
        friend ::djinni::JniInterface<::ledger::core::api::PathResolver, ::djinni_generated::PathResolver>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/PathResolver") };
};

}  // namespace djinni_generated
