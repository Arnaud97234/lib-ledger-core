// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#ifndef DJINNI_GENERATED_OPERATION_HPP
#define DJINNI_GENERATED_OPERATION_HPP

#include "../utils/optional.hpp"
#include <chrono>
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace ledger { namespace core { namespace api {

class Amount;
class BitcoinLikeOperation;
class Preferences;
class TrustIndicator;
enum class OperationType;
enum class WalletType;
struct Currency;

class Operation {
public:
    virtual ~Operation() {}

    virtual std::string getUid() = 0;

    virtual int32_t getAccountIndex() = 0;

    virtual OperationType getOperationType() = 0;

    virtual std::chrono::system_clock::time_point getDate() = 0;

    virtual std::vector<std::string> getSenders() = 0;

    virtual std::vector<std::string> getRecipients() = 0;

    virtual std::shared_ptr<Amount> getAmount() = 0;

    virtual std::shared_ptr<Amount> getFees() = 0;

    virtual std::shared_ptr<Preferences> getPreferences() = 0;

    virtual std::shared_ptr<TrustIndicator> getTrust() = 0;

    virtual std::experimental::optional<int64_t> getBlockHeight() = 0;

    virtual std::shared_ptr<BitcoinLikeOperation> asBitcoinLikeOperation() = 0;

    /**
     *# asEthereumLikeOperation(): Callback<EthereumLikeOperation>;
     *# asRippleLikeOperation(): Callback<RippleLikeEthereum>;
     */
    virtual bool isInstanceOfBitcoinLikeOperation() = 0;

    virtual bool isInstanceOfEthereumLikeOperation() = 0;

    virtual bool isInstanceOfRippleLikeOperation() = 0;

    virtual bool isComplete() = 0;

    virtual WalletType getWalletType() = 0;

    virtual Currency getCurrency() = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_OPERATION_HPP
