// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#ifndef DJINNI_GENERATED_WALLET_HPP
#define DJINNI_GENERATED_WALLET_HPP

#include <cstdint>
#include <memory>
#include <string>

namespace ledger { namespace core { namespace api {

class AccountCallback;
class AccountCreationInfoCallback;
class AccountListCallback;
class BitcoinLikeWallet;
class EventBus;
class ExtendedKeyAccountCreationInfoCallback;
class I32Callback;
class Logger;
class Preferences;
enum class WalletType;
struct AccountCreationInfo;
struct Currency;
struct ExtendedKeyAccountCreationInfo;

class Wallet {
public:
    virtual ~Wallet() {}

    virtual std::string getName() = 0;

    virtual void getAccount(int32_t index, const std::shared_ptr<AccountCallback> & callback) = 0;

    virtual void getAccountCount(const std::shared_ptr<I32Callback> & callback) = 0;

    virtual void getAccounts(int32_t offset, int32_t count, const std::shared_ptr<AccountListCallback> & callback) = 0;

    virtual void getNextAccountIndex(const std::shared_ptr<I32Callback> & callback) = 0;

    virtual std::shared_ptr<EventBus> getEventBus() = 0;

    virtual bool isSynchronizing() = 0;

    virtual std::shared_ptr<EventBus> synchronize() = 0;

    virtual std::shared_ptr<Preferences> getPreferences() = 0;

    virtual std::shared_ptr<Logger> getLogger() = 0;

    virtual std::shared_ptr<Preferences> getAccountPreferences(int32_t index) = 0;

    /**
     * asBitcoinLikeWallet(): Callback<BitcoinLikeWallet>;
     * asEthereumLikeWallet(): Callback<EthereumLikeWallet>;
     * asRippleLikeWallet(): Callback<RippleLikeWallet>;
     */
    virtual std::shared_ptr<BitcoinLikeWallet> asBitcoinLikeWallet() = 0;

    virtual Currency getCurrency() = 0;

    virtual bool isInstanceOfBitcoinLikeWallet() = 0;

    virtual bool isInstanceOfEthereumLikeWallet() = 0;

    virtual bool isInstanceOfRippleLikeWallet() = 0;

    virtual WalletType getWalletType() = 0;

    virtual void getAccountCreationInfo(int32_t accountIndex, const std::shared_ptr<AccountCreationInfoCallback> & callback) = 0;

    virtual void getExtendedKeyAccountCreationInfo(int32_t accountIndex, const std::shared_ptr<ExtendedKeyAccountCreationInfoCallback> & callback) = 0;

    virtual void getNextAccountCreationInfo(const std::shared_ptr<AccountCreationInfoCallback> & callback) = 0;

    virtual void getNextExtendedKeyAccountCreationInfo(const std::shared_ptr<ExtendedKeyAccountCreationInfoCallback> & callback) = 0;

    virtual void newAccountWithInfo(const AccountCreationInfo & accountCreationInfo, const std::shared_ptr<AccountCallback> & callback) = 0;

    virtual void newAccountWithExtendedKeyInfo(const ExtendedKeyAccountCreationInfo & extendedKeyAccountCreationInfo, const std::shared_ptr<AccountCallback> & callback) = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_WALLET_HPP
