// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from preferences.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace ledger { namespace core { namespace api {

class PreferencesEditor;

class Preferences {
public:
    virtual ~Preferences() {}

    virtual std::string getString(const std::string & key, const std::string & fallbackValue) = 0;

    virtual int32_t getInt(const std::string & key, int32_t fallbackValue) = 0;

    virtual int64_t getLong(const std::string & key, int64_t fallbackValue) = 0;

    virtual bool getBoolean(const std::string & key, bool fallbackValue) = 0;

    virtual std::vector<std::string> getStringArray(const std::string & key, const std::vector<std::string> & fallbackValue) = 0;

    virtual bool contains(const std::string & key) = 0;

    virtual std::shared_ptr<PreferencesEditor> edit() = 0;
};

} } }  // namespace ledger::core::api
