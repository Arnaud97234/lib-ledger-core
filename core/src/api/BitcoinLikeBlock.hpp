// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#pragma once

#include <cstdint>
#include <string>
#include <utility>

namespace ledger { namespace core { namespace api {

struct BitcoinLikeBlock final {
    std::string hash;
    int64_t height;
    int64_t time;

    BitcoinLikeBlock(std::string hash_,
                     int64_t height_,
                     int64_t time_)
    : hash(std::move(hash_))
    , height(std::move(height_))
    , time(std::move(time_))
    {}

    BitcoinLikeBlock(const BitcoinLikeBlock& cpy) {
       this->hash = cpy.hash;
       this->height = cpy.height;
       this->time = cpy.time;
    }

    BitcoinLikeBlock() = default;


    BitcoinLikeBlock& operator=(const BitcoinLikeBlock& cpy) {
       this->hash = cpy.hash;
       this->height = cpy.height;
       this->time = cpy.time;
       return *this;
    }
};

} } }  // namespace ledger::core::api
