// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet_pool.djinni

#ifndef DJINNI_GENERATED_WALLETPOOL_HPP
#define DJINNI_GENERATED_WALLETPOOL_HPP

#include "../utils/optional.hpp"
#include <cstdint>
#include <memory>
#include <string>

namespace ledger { namespace core { namespace api {

class BlockCallback;
class CurrencyCallback;
class CurrencyListCallback;
class DatabaseBackend;
class DynamicObject;
class EventBus;
class HttpClient;
class I32Callback;
class LogPrinter;
class Logger;
class PathResolver;
class Preferences;
class RandomNumberGenerator;
class ThreadDispatcher;
class WalletCallback;
class WalletListCallback;
class WebSocketClient;
struct Currency;

class WalletPool {
public:
    virtual ~WalletPool() {}

    static std::shared_ptr<WalletPool> newInstance(const std::string & name, const std::experimental::optional<std::string> & password, const std::shared_ptr<HttpClient> & httpClient, const std::shared_ptr<WebSocketClient> & webSocketClient, const std::shared_ptr<PathResolver> & pathResolver, const std::shared_ptr<LogPrinter> & logPrinter, const std::shared_ptr<ThreadDispatcher> & dispatcher, const std::shared_ptr<RandomNumberGenerator> & rng, const std::shared_ptr<DatabaseBackend> & backend, const std::shared_ptr<DynamicObject> & configuration);

    virtual std::shared_ptr<Logger> getLogger() = 0;

    virtual std::string getName() = 0;

    virtual std::shared_ptr<Preferences> getPreferences() = 0;

    virtual void getWalletCount(const std::shared_ptr<I32Callback> & callback) = 0;

    virtual void getWallets(int32_t from, int32_t size, const std::shared_ptr<WalletListCallback> & callback) = 0;

    virtual void getWallet(const std::string & name, const std::shared_ptr<WalletCallback> & callback) = 0;

    virtual void createWallet(const std::string & name, const Currency & currency, const std::shared_ptr<DynamicObject> & configuration, const std::shared_ptr<WalletCallback> & callback) = 0;

    virtual void getCurrencies(const std::shared_ptr<CurrencyListCallback> & callback) = 0;

    virtual void getCurrency(const std::string & name, const std::shared_ptr<CurrencyCallback> & callback) = 0;

    virtual void getLastBlock(const std::string & currencyName, const std::shared_ptr<BlockCallback> & callback) = 0;

    virtual std::shared_ptr<EventBus> getEventBus() = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_WALLETPOOL_HPP
