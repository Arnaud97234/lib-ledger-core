// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from addresses.djinni

#pragma once

#include "../utils/optional.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace ledger { namespace core { namespace api {

struct BitcoinLikeNetworkParameters;

class BitcoinLikeAddress {
public:
    virtual ~BitcoinLikeAddress() {}

    virtual int32_t getVersion() = 0;

    virtual std::vector<uint8_t> getHash160() = 0;

    virtual BitcoinLikeNetworkParameters getNetworkParameters() = 0;

    virtual std::string toBase58() = 0;

    virtual std::string toPaymentUri() = 0;

    virtual bool isP2SH() = 0;

    virtual bool isP2PKH() = 0;

    virtual std::experimental::optional<std::string> getDerivationPath() = 0;

    static std::shared_ptr<BitcoinLikeAddress> fromBase58(const BitcoinLikeNetworkParameters & params, const std::string & address);
};

} } }  // namespace ledger::core::api
