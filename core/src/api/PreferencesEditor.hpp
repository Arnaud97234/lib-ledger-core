// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from preferences.djinni

#pragma once

#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace ledger { namespace core { namespace api {

class PreferencesEditor {
public:
    virtual ~PreferencesEditor() {}

    virtual std::shared_ptr<PreferencesEditor> putString(const std::string & key, const std::string & value) = 0;

    virtual std::shared_ptr<PreferencesEditor> putInt(const std::string & key, int32_t value) = 0;

    virtual std::shared_ptr<PreferencesEditor> putLong(const std::string & key, int64_t value) = 0;

    virtual std::shared_ptr<PreferencesEditor> putBoolean(const std::string & key, bool value) = 0;

    virtual std::shared_ptr<PreferencesEditor> putStringArray(const std::string & key, const std::vector<std::string> & value) = 0;

    virtual void commit() = 0;
};

} } }  // namespace ledger::core::api
