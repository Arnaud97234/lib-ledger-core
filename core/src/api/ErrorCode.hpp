// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from errors.djinni

#pragma once

#include <functional>

namespace ledger { namespace core { namespace api {

enum class ErrorCode : int {
    /**
     * Device errors
     * Wallet errors
     * User land errors
     */
    CANCELLED_BY_USER,
    /** Others */
    INVALID_BASE58_FORMAT,
    INVALID_CHECKSUM,
    INVALID_VERSION,
    /** DeterministicPublicKey */
    PRIVATE_DERIVATION_NOT_SUPPORTED,
    /** Bitcoin error */
    INVALID_NETWORK_ADDRESS_VERSION,
    /** Generic */
    RUNTIME_ERROR,
    OUT_OF_RANGE,
    ILLEGAL_ARGUMENT,
    ILLEGAL_STATE,
    NULL_POINTER,
    UNSUPPORTED_OPERATION,
    UNKNOWN,
    IMPLEMENTATION_IS_MISSING,
};

} } }  // namespace ledger::core::api

namespace std {

template <>
struct hash<::ledger::core::api::ErrorCode> {
    size_t operator()(::ledger::core::api::ErrorCode type) const {
        return std::hash<int>()(static_cast<int>(type));
    }
};

}  // namespace std
