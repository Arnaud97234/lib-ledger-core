// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from secp256k1.djinni

#ifndef DJINNI_GENERATED_SECP256K1_HPP
#define DJINNI_GENERATED_SECP256K1_HPP

#include <cstdint>
#include <memory>
#include <vector>

namespace ledger { namespace core { namespace api {

class Secp256k1 {
public:
    virtual ~Secp256k1() {}

    virtual std::vector<uint8_t> computePubKey(const std::vector<uint8_t> & privKey, bool compress) = 0;

    virtual std::vector<uint8_t> sign(const std::vector<uint8_t> & privKey, const std::vector<uint8_t> & data) = 0;

    virtual bool verify(const std::vector<uint8_t> & data, const std::vector<uint8_t> & signature, const std::vector<uint8_t> & pubKey) = 0;

    static std::shared_ptr<Secp256k1> newInstance();
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_SECP256K1_HPP
