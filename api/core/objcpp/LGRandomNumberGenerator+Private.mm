// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from random.djinni

#import "LGRandomNumberGenerator+Private.h"
#import "LGRandomNumberGenerator.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class RandomNumberGenerator::ObjcProxy final
: public ::ledger::core::api::RandomNumberGenerator
, public ::djinni::ObjcProxyCache::Handle<ObjcType>
{
public:
    using Handle::Handle;
    std::vector<uint8_t> getRandomBytes(int32_t c_size) override
    {
        @autoreleasepool {
            auto objcpp_result_ = [Handle::get() getRandomBytes:(::djinni::I32::fromCpp(c_size))];
            return ::djinni::Binary::toCpp(objcpp_result_);
        }
    }
    int32_t getRandomInt() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [Handle::get() getRandomInt];
            return ::djinni::I32::toCpp(objcpp_result_);
        }
    }
    int64_t getRandomLong() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [Handle::get() getRandomLong];
            return ::djinni::I64::toCpp(objcpp_result_);
        }
    }
    int8_t getRandomByte() override
    {
        @autoreleasepool {
            auto objcpp_result_ = [Handle::get() getRandomByte];
            return ::djinni::I8::toCpp(objcpp_result_);
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto RandomNumberGenerator::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto RandomNumberGenerator::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).Handle::get();
}

}  // namespace djinni_generated
