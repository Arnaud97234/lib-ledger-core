// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from logger.djinni

#import "LGLogPrinter+Private.h"
#import "LGLogPrinter.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class LogPrinter::ObjcProxy final
: public ::ledger::core::api::LogPrinter
, public ::djinni::ObjcProxyCache::Handle<ObjcType>
{
public:
    using Handle::Handle;
    void printError(const std::string & c_message) override
    {
        @autoreleasepool {
            [Handle::get() printError:(::djinni::String::fromCpp(c_message))];
        }
    }
    void printInfo(const std::string & c_message) override
    {
        @autoreleasepool {
            [Handle::get() printInfo:(::djinni::String::fromCpp(c_message))];
        }
    }
    void printDebug(const std::string & c_message) override
    {
        @autoreleasepool {
            [Handle::get() printDebug:(::djinni::String::fromCpp(c_message))];
        }
    }
    void printWarning(const std::string & c_message) override
    {
        @autoreleasepool {
            [Handle::get() printWarning:(::djinni::String::fromCpp(c_message))];
        }
    }
    void printApdu(const std::string & c_message) override
    {
        @autoreleasepool {
            [Handle::get() printApdu:(::djinni::String::fromCpp(c_message))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto LogPrinter::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto LogPrinter::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).Handle::get();
}

}  // namespace djinni_generated
