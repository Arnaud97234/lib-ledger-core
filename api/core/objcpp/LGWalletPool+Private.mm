// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet_pool.djinni

#import "LGWalletPool+Private.h"
#import "LGWalletPool.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "LGBlockCallback+Private.h"
#import "LGCurrency+Private.h"
#import "LGCurrencyCallback+Private.h"
#import "LGCurrencyListCallback+Private.h"
#import "LGDynamicObject+Private.h"
#import "LGEventBus+Private.h"
#import "LGI32Callback+Private.h"
#import "LGLogger+Private.h"
#import "LGPreferences+Private.h"
#import "LGWalletCallback+Private.h"
#import "LGWalletListCallback+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface LGWalletPool ()

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::WalletPool>&)cppRef;

@end

@implementation LGWalletPool {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::ledger::core::api::WalletPool>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::ledger::core::api::WalletPool>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (nullable LGLogger *)getLogger {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getLogger();
        return ::djinni_generated::Logger::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getName {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getName();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGPreferences *)getPreferences {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getPreferences();
        return ::djinni_generated::Preferences::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getWalletCount:(nullable id<LGI32Callback>)callback {
    try {
        _cppRefHandle.get()->getWalletCount(::djinni_generated::I32Callback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getWallets:(int32_t)from
              size:(int32_t)size
          callback:(nullable id<LGWalletListCallback>)callback {
    try {
        _cppRefHandle.get()->getWallets(::djinni::I32::toCpp(from),
                                        ::djinni::I32::toCpp(size),
                                        ::djinni_generated::WalletListCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getWallet:(nonnull NSString *)name
         callback:(nullable id<LGWalletCallback>)callback {
    try {
        _cppRefHandle.get()->getWallet(::djinni::String::toCpp(name),
                                       ::djinni_generated::WalletCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)createWallet:(nonnull NSString *)name
            currency:(nonnull LGCurrency *)currency
       configuration:(nullable LGDynamicObject *)configuration
            callback:(nullable id<LGWalletCallback>)callback {
    try {
        _cppRefHandle.get()->createWallet(::djinni::String::toCpp(name),
                                          ::djinni_generated::Currency::toCpp(currency),
                                          ::djinni_generated::DynamicObject::toCpp(configuration),
                                          ::djinni_generated::WalletCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getCurrencies:(nullable id<LGCurrencyListCallback>)callback {
    try {
        _cppRefHandle.get()->getCurrencies(::djinni_generated::CurrencyListCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getCurrency:(nonnull NSString *)name
           callback:(nullable id<LGCurrencyCallback>)callback {
    try {
        _cppRefHandle.get()->getCurrency(::djinni::String::toCpp(name),
                                         ::djinni_generated::CurrencyCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)getLastBlock:(nonnull NSString *)currencyName
            callback:(nullable id<LGBlockCallback>)callback {
    try {
        _cppRefHandle.get()->getLastBlock(::djinni::String::toCpp(currencyName),
                                          ::djinni_generated::BlockCallback::toCpp(callback));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nullable LGEventBus *)getEventBus {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getEventBus();
        return ::djinni_generated::EventBus::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto WalletPool::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto WalletPool::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<LGWalletPool>(cpp);
}

}  // namespace djinni_generated

@end
