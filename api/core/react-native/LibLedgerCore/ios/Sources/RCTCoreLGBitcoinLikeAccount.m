// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#import "RCTCoreLGBitcoinLikeAccount.h"


@implementation RCTCoreLGBitcoinLikeAccount
//Export module
RCT_EXPORT_MODULE(RCTCoreLGBitcoinLikeAccount)

-(instancetype)init
{
    self = [super init];
    //Init Objc implementation
    if(self)
    {
        self.objcImpl = [[LGBitcoinLikeAccount alloc] init];
    }
    return self;
}

/**
 *Get UTXOs of account in a given range
 *@param from, integer, lower bound for account's UTXO's index
 *@param to, integer, upper bound for account's UTXO's index
 *@param callback, ListCallback object which returns a list of BitcoinLikeOutput if getUTXO succeed
 */
RCT_REMAP_METHOD(getUTXO,getUTXO:(int32_t)from
                              to:(int32_t)to
                        callback:(nullable id<LGBitcoinLikeOutputListCallback>)callback) {

    [self.objcImpl getUTXO:from to:to callback:callback];
}

/**
 *Get UTXOs count of account
 *@param callback, Callback object which returns number of UTXO owned by this account
 */
RCT_REMAP_METHOD(getUTXOCount,getUTXOCount:(nullable id<LGI32Callback>)callback) {

    [self.objcImpl getUTXOCount:callback];
}

RCT_REMAP_METHOD(broadcastRawTransaction,broadcastRawTransaction:(nonnull NSData *)transaction
                                                        callback:(nullable id<LGStringCallback>)callback) {

    [self.objcImpl broadcastRawTransaction:transaction callback:callback];
}

RCT_REMAP_METHOD(broadcastTransaction,broadcastTransaction:(nullable LGBitcoinLikeTransaction *)transaction
                                                  callback:(nullable id<LGStringCallback>)callback) {

    [self.objcImpl broadcastTransaction:transaction callback:callback];
}

RCT_REMAP_METHOD(buildTransaction,buildTransactionWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {

    id result = @{@"result" :[self.objcImpl buildTransaction]};
    if(result)
    {
        resolve(result);
    }
    else
    {
        reject(@"impl_call_error", @"Error while calling LGBitcoinLikeAccount::buildTransaction", nil);
    }
}
@end
