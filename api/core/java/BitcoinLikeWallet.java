// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

package co.ledger.core;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class BitcoinLikeWallet {
    public abstract Preferences getPreferences();

    public abstract BitcoinLikeOperationCursor openOperationCursor();

    public abstract void synchronize(BitcoinLikeWalletSynchronizationListener listener);

    private static final class CppProxy extends BitcoinLikeWallet
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public Preferences getPreferences()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_getPreferences(this.nativeRef);
        }
        private native Preferences native_getPreferences(long _nativeRef);

        @Override
        public BitcoinLikeOperationCursor openOperationCursor()
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            return native_openOperationCursor(this.nativeRef);
        }
        private native BitcoinLikeOperationCursor native_openOperationCursor(long _nativeRef);

        @Override
        public void synchronize(BitcoinLikeWalletSynchronizationListener listener)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_synchronize(this.nativeRef, listener);
        }
        private native void native_synchronize(long _nativeRef, BitcoinLikeWalletSynchronizationListener listener);
    }
}
