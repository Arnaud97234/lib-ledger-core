// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

package co.ledger.core;

import java.util.concurrent.atomic.AtomicBoolean;

public abstract class BitcoinLikeWallet {
    public abstract void createNewAccount(int index, BitcoinLikeExtendedPublicKeyProvider xpubProvider, AccountCallback callback);

    public abstract void createNextAccount(BitcoinLikeExtendedPublicKeyProvider xpubProvider, AccountCallback callback);

    public abstract void getNextAccountInfo(BitcoinLikeNextAccountInfoCallback callback);

    private static final class CppProxy extends BitcoinLikeWallet
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public void createNewAccount(int index, BitcoinLikeExtendedPublicKeyProvider xpubProvider, AccountCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_createNewAccount(this.nativeRef, index, xpubProvider, callback);
        }
        private native void native_createNewAccount(long _nativeRef, int index, BitcoinLikeExtendedPublicKeyProvider xpubProvider, AccountCallback callback);

        @Override
        public void createNextAccount(BitcoinLikeExtendedPublicKeyProvider xpubProvider, AccountCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_createNextAccount(this.nativeRef, xpubProvider, callback);
        }
        private native void native_createNextAccount(long _nativeRef, BitcoinLikeExtendedPublicKeyProvider xpubProvider, AccountCallback callback);

        @Override
        public void getNextAccountInfo(BitcoinLikeNextAccountInfoCallback callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_getNextAccountInfo(this.nativeRef, callback);
        }
        private native void native_getNextAccountInfo(long _nativeRef, BitcoinLikeNextAccountInfoCallback callback);
    }
}
