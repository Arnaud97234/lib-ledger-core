// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from core.idl

#include "HttpResponseCallback.hpp"  // my header
#include "HttpRequest.hpp"
#include "HttpResponse.hpp"

namespace djinni_generated {

HttpResponseCallback::HttpResponseCallback() : ::djinni::JniInterface<::HttpResponseCallback, HttpResponseCallback>("HttpResponseCallback$CppProxy") {}

HttpResponseCallback::~HttpResponseCallback() = default;


CJNIEXPORT void JNICALL Java_HttpResponseCallback_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::HttpResponseCallback>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_HttpResponseCallback_00024CppProxy_native_1onCompletion(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_request, jobject j_response)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::HttpResponseCallback>(nativeRef);
        ref->onCompletion(::djinni_generated::HttpRequest::toCpp(jniEnv, j_request),
                          ::djinni_generated::HttpResponse::toCpp(jniEnv, j_response));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
