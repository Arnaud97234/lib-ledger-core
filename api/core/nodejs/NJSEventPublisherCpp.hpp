// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from emitter.djinni

#ifndef DJINNI_GENERATED_NJSEVENTPUBLISHER_HPP
#define DJINNI_GENERATED_NJSEVENTPUBLISHER_HPP


#include "NJSEventBusCpp.hpp"
#include "NJSEventCpp.hpp"
#include "NJSExecutionContext.hpp"
#include <cstdint>
#include <memory>

#include <nan.h>
#include <node.h>
#include "../../../../core/src/api/EventPublisher.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSEventPublisher: public Nan::ObjectWrap {
public:

    static void Initialize(Local<Object> target);
    virtual ~NJSEventPublisher() {};
    NJSEventPublisher(const std::shared_ptr<ledger::core::api::EventPublisher> &iEventPublisher):_EventPublisher(iEventPublisher){};

    static Handle<Object> wrap(const std::shared_ptr<ledger::core::api::EventPublisher> &object);
    static Nan::Persistent<ObjectTemplate> EventPublisher_prototype;
    std::shared_ptr<ledger::core::api::EventPublisher> getCppImpl(){return _EventPublisher;};

private:
    static NAN_METHOD(getEventBus);

    static NAN_METHOD(post);

    static NAN_METHOD(postSticky);

    static NAN_METHOD(relay);

    static NAN_METHOD(newInstance);

    static NAN_METHOD(New);

    std::shared_ptr<ledger::core::api::EventPublisher> _EventPublisher;
};
#endif //DJINNI_GENERATED_NJSEVENTPUBLISHER_HPP
