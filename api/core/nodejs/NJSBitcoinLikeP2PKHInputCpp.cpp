// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#include "NJSBitcoinLikeP2PKHInputCpp.hpp"

using namespace v8;
using namespace node;
using namespace std;


NAN_METHOD(NJSBitcoinLikeP2PKHInput::New) {
    //Only new allowed
    if(!info.IsConstructCall())
    {
        return Nan::ThrowError("NJSBitcoinLikeP2PKHInput function can only be called as constructor (use New)");
    }
    NJSBitcoinLikeP2PKHInput *node_instance = new NJSBitcoinLikeP2PKHInput(nullptr);

    if(node_instance)
    {
        //Wrap and return node instance
        node_instance->Wrap(info.This());
        node_instance->Ref();
        info.GetReturnValue().Set(info.This());
    }
}


Nan::Persistent<ObjectTemplate> NJSBitcoinLikeP2PKHInput::BitcoinLikeP2PKHInput_prototype;

Handle<Object> NJSBitcoinLikeP2PKHInput::wrap(const std::shared_ptr<ledger::core::api::BitcoinLikeP2PKHInput> &object) {
    Nan::HandleScope scope;
    Local<ObjectTemplate> local_prototype = Nan::New(BitcoinLikeP2PKHInput_prototype);

    Handle<Object> obj;
    if(!local_prototype.IsEmpty())
    {
        obj = local_prototype->NewInstance();
        NJSBitcoinLikeP2PKHInput *new_obj = new NJSBitcoinLikeP2PKHInput(object);
        if(new_obj)
        {
            new_obj->Wrap(obj);
            new_obj->Ref();
        }
    }
    else
    {
        Nan::ThrowError("NJSBitcoinLikeP2PKHInput::wrap: object template not valid");
    }
    return obj;
}

void NJSBitcoinLikeP2PKHInput::Initialize(Local<Object> target) {
    Nan::HandleScope scope;

    Local<FunctionTemplate> func_template = Nan::New<FunctionTemplate>(NJSBitcoinLikeP2PKHInput::New);
    Local<ObjectTemplate> objectTemplate = func_template->InstanceTemplate();
    objectTemplate->SetInternalFieldCount(1);

    func_template->SetClassName(Nan::New<String>("NJSBitcoinLikeP2PKHInput").ToLocalChecked());

    //SetPrototypeMethod all methods
    //Set object prototype
    BitcoinLikeP2PKHInput_prototype.Reset(objectTemplate);

    //Add template to target
    target->Set(Nan::New<String>("NJSBitcoinLikeP2PKHInput").ToLocalChecked(), func_template->GetFunction());
}
