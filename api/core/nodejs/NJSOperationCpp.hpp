// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from wallet.djinni

#ifndef DJINNI_GENERATED_NJSOPERATION_HPP
#define DJINNI_GENERATED_NJSOPERATION_HPP


#include "../../../core/src/api/../utils/optional.hpp"
#include "../../../core/src/api/OperationType.hpp"
#include "../../../core/src/api/WalletType.hpp"
#include "NJSAmountCpp.hpp"
#include "NJSBitcoinLikeOperationCpp.hpp"
#include "NJSPreferencesCpp.hpp"
#include "NJSTrustIndicatorCpp.hpp"
#include <chrono>
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../../../core/src/api/Operation.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSOperation: public Nan::ObjectWrap {
public:

    static void Initialize(Local<Object> target);
    virtual ~NJSOperation() {};
    NJSOperation(const std::shared_ptr<ledger::core::api::Operation> &iOperation):_Operation(iOperation){};

    static Handle<Object> wrap(const std::shared_ptr<ledger::core::api::Operation> &object);
    static Nan::Persistent<ObjectTemplate> Operation_prototype;
    std::shared_ptr<ledger::core::api::Operation> getCppImpl(){return _Operation;};

private:
    static NAN_METHOD(getUid);

    static NAN_METHOD(getAccountIndex);

    static NAN_METHOD(getOperationType);

    static NAN_METHOD(getDate);

    static NAN_METHOD(getSenders);

    static NAN_METHOD(getRecipients);

    static NAN_METHOD(getAmount);

    static NAN_METHOD(getFees);

    static NAN_METHOD(getPreferences);

    static NAN_METHOD(getTrust);

    static NAN_METHOD(getBlockHeight);

    static NAN_METHOD(asBitcoinLikeOperation);

    /**
     *# asEthereumLikeOperation(): Callback<EthereumLikeOperation>;
     *# asRippleLikeOperation(): Callback<RippleLikeEthereum>;
     */
    static NAN_METHOD(isInstanceOfBitcoinLikeOperation);

    static NAN_METHOD(isInstanceOfEthereumLikeOperation);

    static NAN_METHOD(isInstanceOfRippleLikeOperation);

    static NAN_METHOD(isComplete);

    static NAN_METHOD(getWalletType);

    static NAN_METHOD(New);

    std::shared_ptr<ledger::core::api::Operation> _Operation;
};
#endif //DJINNI_GENERATED_NJSOPERATION_HPP
