// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from bitcoin_like_wallet.djinni

#ifndef DJINNI_GENERATED_NJSBITCOINLIKEHELPER_HPP
#define DJINNI_GENERATED_NJSBITCOINLIKEHELPER_HPP


#include "../../../core/src/api/BitcoinLikePreparedTransaction.hpp"
#include "NJSAmountCpp.hpp"
#include "NJSBitcoinLikeOutputCpp.hpp"
#include "NJSBitcoinLikeTransactionCpp.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

#include <nan.h>
#include <node.h>
#include "../../../core/src/api/BitcoinLikeHelper.hpp"

using namespace v8;
using namespace node;
using namespace std;
using namespace ledger::core::api;

class NJSBitcoinLikeHelper: public Nan::ObjectWrap {
public:

    static void Initialize(Local<Object> target);
    virtual ~NJSBitcoinLikeHelper() {};
    NJSBitcoinLikeHelper(const std::shared_ptr<ledger::core::api::BitcoinLikeHelper> &iBitcoinLikeHelper):_BitcoinLikeHelper(iBitcoinLikeHelper){};

    static Handle<Object> wrap(const std::shared_ptr<ledger::core::api::BitcoinLikeHelper> &object);
    static Nan::Persistent<ObjectTemplate> BitcoinLikeHelper_prototype;
    std::shared_ptr<ledger::core::api::BitcoinLikeHelper> getCppImpl(){return _BitcoinLikeHelper;};

private:
    static NAN_METHOD(scriptToOutput);

    static NAN_METHOD(addressToOutput);

    static NAN_METHOD(serializeTransaction);

    static NAN_METHOD(parseTransaction);

    static NAN_METHOD(New);

    std::shared_ptr<ledger::core::api::BitcoinLikeHelper> _BitcoinLikeHelper;
};
#endif //DJINNI_GENERATED_NJSBITCOINLIKEHELPER_HPP
