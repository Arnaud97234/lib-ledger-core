// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from dynamic.djinni

#ifndef DJINNI_GENERATED_DYNAMICARRAY_HPP
#define DJINNI_GENERATED_DYNAMICARRAY_HPP

#include "../utils/optional.hpp"
#include <cstdint>
#include <memory>
#include <string>
#include <vector>

namespace ledger { namespace core { namespace api {

class DynamicObject;
enum class DynamicType;

class DynamicArray {
public:
    virtual ~DynamicArray() {}

    virtual int64_t size() = 0;

    virtual std::experimental::optional<std::string> getString(int64_t index) = 0;

    virtual std::experimental::optional<int32_t> getInt(int64_t index) = 0;

    virtual std::experimental::optional<int64_t> getLong(int64_t index) = 0;

    virtual std::experimental::optional<double> getDouble(int64_t index) = 0;

    virtual std::experimental::optional<std::vector<uint8_t>> getData(int64_t index) = 0;

    virtual std::experimental::optional<bool> getBoolean(int64_t index) = 0;

    virtual std::shared_ptr<DynamicArray> pushInt(int32_t value) = 0;

    virtual std::shared_ptr<DynamicArray> pushLong(int64_t value) = 0;

    virtual std::shared_ptr<DynamicArray> pushString(const std::string & value) = 0;

    virtual std::shared_ptr<DynamicArray> pushDouble(double value) = 0;

    virtual std::shared_ptr<DynamicArray> pushData(const std::vector<uint8_t> & value) = 0;

    virtual std::shared_ptr<DynamicArray> pushBoolean(bool value) = 0;

    virtual std::shared_ptr<DynamicObject> getObject(int64_t index) = 0;

    virtual std::shared_ptr<DynamicArray> getArray(int64_t index) = 0;

    virtual std::shared_ptr<DynamicArray> pushObject(const std::shared_ptr<DynamicObject> & value) = 0;

    virtual std::shared_ptr<DynamicArray> pushArray(const std::shared_ptr<DynamicArray> & value) = 0;

    virtual std::shared_ptr<DynamicArray> concat(const std::shared_ptr<DynamicArray> & array) = 0;

    virtual std::experimental::optional<DynamicType> getType(int64_t index) = 0;

    virtual bool remove(int64_t index) = 0;

    virtual std::string dump() = 0;

    virtual std::vector<uint8_t> serialize() = 0;

    virtual bool isReadOnly() = 0;

    static std::shared_ptr<DynamicArray> newInstance();

    static std::shared_ptr<DynamicArray> load(const std::vector<uint8_t> & serialized);
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_DYNAMICARRAY_HPP
