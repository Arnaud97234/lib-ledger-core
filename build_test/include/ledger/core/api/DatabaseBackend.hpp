// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#ifndef DJINNI_GENERATED_DATABASEBACKEND_HPP
#define DJINNI_GENERATED_DATABASEBACKEND_HPP

#include <cstdint>
#include <memory>
#include <string>

namespace ledger { namespace core { namespace api {

class DatabaseBackend {
public:
    virtual ~DatabaseBackend() {}

    virtual std::shared_ptr<DatabaseBackend> setUsername(const std::string & username) = 0;

    virtual std::shared_ptr<DatabaseBackend> setPassword(const std::string & pwd) = 0;

    virtual std::shared_ptr<DatabaseBackend> setHost(const std::string & host) = 0;

    virtual std::shared_ptr<DatabaseBackend> setHostAddr(const std::string & hostAddr) = 0;

    virtual std::shared_ptr<DatabaseBackend> setPort(const std::string & port) = 0;

    virtual std::shared_ptr<DatabaseBackend> setOptions(const std::string & opts) = 0;

    virtual std::shared_ptr<DatabaseBackend> setSslMode(const std::string & mode) = 0;

    virtual std::shared_ptr<DatabaseBackend> setKerberosName(const std::string & name) = 0;

    virtual std::shared_ptr<DatabaseBackend> setService(const std::string & service) = 0;

    virtual std::shared_ptr<DatabaseBackend> setConnectionPoolSize(int32_t size) = 0;

    virtual std::shared_ptr<DatabaseBackend> enableQueryLogging(bool enable) = 0;

    virtual std::string getUsername() = 0;

    virtual std::string getPassword() = 0;

    virtual std::string getHost() = 0;

    virtual std::string getHostAddr() = 0;

    virtual std::string getPort() = 0;

    virtual std::string getOptions() = 0;

    virtual std::string getSslMode() = 0;

    virtual std::string getKerberosName() = 0;

    virtual std::string getService() = 0;

    virtual int32_t getConnectionPoolSize() = 0;

    virtual bool isLoggingEnabled() = 0;

    static std::shared_ptr<DatabaseBackend> getSqlite3Backend();

    static std::shared_ptr<DatabaseBackend> getPostgreSQLBackend();
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_DATABASEBACKEND_HPP
